@model PaginatedList<BookShopApplication.Web.ViewModels.Shop.ShopViewModel>

@{
    ViewData["Title"] = "Shop List";
}

<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>
<body>
<div class="container mt-5">
        <h2 class="mb-4 text-center">Shops</h2>

    <div class="text-center mt-auto">
        @if (User.Identity?.IsAuthenticated ?? false)
        {
            <div class="text-center mt-4">
                <form asp-controller="Location" asp-action="CreateToShop" method="get" class="d-inline">
                    <button type="submit" class="btn btn-lg btn-success px-4 py-2 shadow-sm rounded-pill">
                        <i class="bi bi-shop me-2"></i> Create Your Own Shop
                    </button>
                </form>
            </div>
        }

    </div>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-4">
        @foreach (var shop in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@shop.Name</h5>
                        <p class="card-text text-muted">@shop.Description</p>
                        <p class="card-text">
                            <strong>Address:</strong> @shop.LocationAddress<br/>
                            <strong>City:</strong> @shop.LocationCity
                        </p>
                        <div class="mt-auto d-flex flex-column gap-2">
                            <a asp-controller="Shop"
                               asp-action="Details"
                               asp-route-id="@shop.Id"
                               class="btn btn-sm btn-primary">
                                View Shop Details
                            </a>

                            <button type="button"
                                    class="btn btn-sm btn-outline-secondary view-on-map-btn"
                                    data-lat="@shop.Latitude"
                                    data-lng="@shop.Longitude"
                                    data-name="@shop.Name"
                                    data-address="@shop.LocationAddress"
                                    data-city="@shop.LocationCity">
                                📍 View on Map
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="map" style="height: 400px; margin-bottom: 2rem;"></div>
        <nav class="mt-3">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    

    
</div>
@using System.Text.Json
@{
    var shopDataJson = JsonSerializer.Serialize(Model.Select(s => new {
        s.Name,
        s.LocationAddress,
        s.LocationCity,
        s.Latitude,
        s.Longitude
    }));
}
@section Scripts {
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
               var shops = @Html.Raw(shopDataJson);

            var map = L.map('map').setView(
                shops.length > 0 ? [shops[0].Latitude, shops[0].Longitude] : [42.7339, 25.4858],
                7
            );

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
            }).addTo(map);

            var markers = [];

            shops.forEach(function (shop) {
                var marker = L.marker([shop.Latitude, shop.Longitude])
                    .addTo(map)
                    .bindPopup(`<strong>${shop.Name}</strong><br>${shop.LocationAddress}, ${shop.LocationCity}`);
                markers.push(marker);
            });

            // Handle "View on Map" button clicks
            document.querySelectorAll('.view-on-map-btn').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    var lat = parseFloat(this.dataset.lat);
                    var lng = parseFloat(this.dataset.lng);
                    var name = this.dataset.name;
                    var address = this.dataset.address;
                    var city = this.dataset.city;

                    map.setView([lat, lng], 16);

                    // Optional: open matching popup
                    var popup = L.popup()
                        .setLatLng([lat, lng])
                        .setContent(`<strong>${name}</strong><br>${address}, ${city}`)
                        .openOn(map);
                });
            });
    </script>
}
</body>

