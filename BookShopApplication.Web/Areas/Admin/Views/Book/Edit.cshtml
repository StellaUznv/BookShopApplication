@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BookShopApplication.Web.ViewModels.Book.EditBookViewModel

@{
    ViewData["Title"] = "Edit Book";
}

<h2 class="mb-4 text-center">Edit Book</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="ShopId" />
    <input type="hidden" asp-for="ImagePath" />

    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Author" class="form-label"></label>
        <input asp-for="Author" class="form-control" />
        <span asp-validation-for="Author" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Price" class="form-label"></label>
        <input asp-for="Price" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="PagesNumber" class="form-label"></label>
        <input asp-for="PagesNumber" class="form-control" />
        <span asp-validation-for="PagesNumber" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="ImageFile" class="form-label">Book Cover (optional)</label>
        <input asp-for="ImageFile" class="form-control" type="file" accept="image/*" onchange="previewImage(this)" />
        <span asp-validation-for="ImageFile" class="text-danger"></span>

        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <div class="mt-3">
                <label>Current Image:</label>
                <div>
                    <img src="@Model.ImagePath" id="preview" class="img-thumbnail" style="max-height: 200px;" />
                </div>
            </div>
        }
        else
        {
            <img id="preview" class="img-thumbnail mt-3 d-none" style="max-height: 200px;" />
        }
    </div>


    <!-- Genre Dropdown -->
    <div class="mb-3">
        <label asp-for="GenreId" class="form-label">Select Genre</label>
        <select asp-for="GenreId" asp-items="Model.Genres" class="form-select">
            <option value="">-- Select existing genre --</option>
        </select>
        <span asp-validation-for="GenreId" class="text-danger"></span>
        <button type="button" class="btn btn-link mt-2" id="toggleNewGenre">+ Add New Genre</button>
    </div>

    <!-- New Genre Form -->
    <div id="newGenreForm" class="border p-3 rounded bg-light d-none">
        <h5>Add New Genre</h5>
        <div class="mb-2">
            <input type="text" id="NewGenreName" class="form-control" placeholder="Genre Name" />
        </div>
        <div class="mb-2">
            <textarea id="NewGenreDescription" class="form-control" placeholder="Genre Description"></textarea>
        </div>
        <button type="button" class="btn btn-outline-success" id="submitNewGenre">Add Genre</button>
        <div class="text-success mt-2 d-none" id="newGenreSuccess">Genre added successfully!</div>
    </div>

    <button type="submit" class="btn btn-primary mt-4">Save Changes</button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("toggleNewGenre").addEventListener("click", function () {
            document.getElementById("newGenreForm").classList.toggle("d-none");
        });

        document.getElementById("submitNewGenre").addEventListener("click", function () {
            const name = document.getElementById("NewGenreName").value.trim();
            const description = document.getElementById("NewGenreDescription").value.trim();
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

            if (!name || !description) {
                alert("Please fill out both name and description.");
                return;
            }

            fetch('/Genre/CreateInline', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token,
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    name: name,
                    description: description,
                    id: crypto.randomUUID()
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    const dropdown = document.querySelector("select[name='GenreId']");
                    const option = new Option(data.name, data.id, true, true);
                    dropdown.append(option);
                    dropdown.value = data.id;

                    document.getElementById("newGenreSuccess").classList.remove("d-none");
                    document.getElementById("newGenreForm").classList.add("d-none");
                    document.getElementById("NewGenreName").value = "";
                    document.getElementById("NewGenreDescription").value = "";
                } else {
                    alert(data.error || "Genre could not be added.");
                }
            })
            .catch(() => {
                alert("An error occurred while adding the genre.");
            });
        });

            function previewImage(input) {
            const preview = document.getElementById('preview');
            const file = input.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.classList.remove('d-none');
                };
                reader.readAsDataURL(file);
            }
        }
    </script>
}
