@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PaginatedList<BookShopApplication.Web.ViewModels.Location.LocationViewModel>

@{
    ViewData["Title"] = "Manage Locations";
}

<div class="container py-4">
    <h2 class="mb-4 text-center">Manage Locations</h2>

    <div class="text-end mb-3">
        <a asp-action="Create" class="btn btn-primary">Add New Location</a>
    </div>
    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            No locations available.
        </div>
    }
    else
    {
        <table class="table table-hover table-bordered align-middle">
            <thead class="table-light">
            <tr>
                <th>Country</th>
                <th>City</th>
                <th>Address</th>
                <th>Zip Code</th>
                <th style="width: 160px;">Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var location in Model)
            {
                <tr>
                    <td>@location.CountryName</td>
                    <td>@location.CityName</td>
                    <td>@location.Address</td>
                    <td>@location.ZipCode</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a target="_blank"
                               href="https://www.google.com/maps/search/?api=1&query=@location.Latitude,@location.Longitude"
                               class="btn btn-sm btn-info">
                                View Map
                            </a>
                            <a asp-action="Edit" asp-route-id="@location.Id" class="btn btn-sm btn-warning">Edit</a>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <nav class="mt-5">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-route-page="@(Model.PageIndex - 1)">Previous</a>
                    </li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-route-page="@i">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-route-page="@(Model.PageIndex + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>