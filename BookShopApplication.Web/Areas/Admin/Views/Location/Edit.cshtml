@model BookShopApplication.Web.ViewModels.Location.EditLocationViewModel

@{
    ViewData["Title"] = "Edit Location";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10 col-sm-12">
            <div class="bg-light shadow rounded p-4">
                <h2 class="mb-4 text-center"><i class="bi bi-pencil-square"></i> Edit Shop Location</h2>

                <form asp-action="Edit" method="post" class="needs-validation" novalidate>
                    <input type="hidden" asp-for="Id" />

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label asp-for="CountryName" class="form-label">Country</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-globe-europe-africa"></i></span>
                                <input asp-for="CountryName" class="form-control" autocomplete="country" />
                            </div>
                            <span asp-validation-for="CountryName" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="CityName" class="form-label">City</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-building"></i></span>
                                <input asp-for="CityName" class="form-control" autocomplete="address-level2" />
                            </div>
                            <span asp-validation-for="CityName" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="Address" class="form-label">Street Address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-signpost"></i></span>
                                <input asp-for="Address" class="form-control" autocomplete="street-address" />
                            </div>
                            <span asp-validation-for="Address" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="ZipCode" class="form-label">Zip Code</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-mailbox"></i></span>
                                <input asp-for="ZipCode" class="form-control" autocomplete="postal-code" />
                            </div>
                            <span asp-validation-for="ZipCode" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="Latitude" class="form-label">Latitude</label>
                            <input asp-for="Latitude" class="form-control" type="number" step="any" readonly />
                            <span asp-validation-for="Latitude" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="Longitude" class="form-label">Longitude</label>
                            <input asp-for="Longitude" class="form-control" type="number" step="any" readonly />
                            <span asp-validation-for="Longitude" class="text-danger small"></span>
                        </div>

                        <div class="col-12">
                            <label class="form-label">Update Location on Map</label>
                            <div id="map" class="rounded border" style="height: 400px;"></div>
                        </div>

                        <div class="col-12 mt-3">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-save-fill"></i> Save Changes
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <script>
        var initialLat = @Model.Latitude.ToString("F6", System.Globalization.CultureInfo.InvariantCulture);
        var initialLng = @Model.Longitude.ToString("F6", System.Globalization.CultureInfo.InvariantCulture);
        var map = L.map('map').setView([initialLat, initialLng], 16);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        var marker = L.marker([initialLat, initialLng], { draggable: true }).addTo(map);

        async function reverseGeocode(lat, lng) {
            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`;
            const response = await fetch(url);
            if (!response.ok) return;
            const data = await response.json();
            if (data && data.address) {
                const addr = data.address;
                document.getElementById("Address").value = addr.road || addr.pedestrian || addr.neighbourhood || addr.building || "";
                document.getElementById("CityName").value = addr.city || addr.town || addr.village || addr.hamlet || "";
                document.getElementById("CountryName").value = addr.country || "";
                document.getElementById("ZipCode").value = addr.postcode || "";
                document.getElementById("Latitude").value = lat;
                document.getElementById("Longitude").value = lng;
            }
        }

        marker.on('dragend', function (event) {
            var pos = event.target.getLatLng();
            reverseGeocode(pos.lat.toFixed(6), pos.lng.toFixed(6));
        });

        map.on('click', function (e) {
            var lat = e.latlng.lat.toFixed(6);
            var lng = e.latlng.lng.toFixed(6);
            marker.setLatLng(e.latlng);
            reverseGeocode(lat, lng);
        });

        var geocoder = L.Control.geocoder({
            defaultMarkGeocode: false,
            placeholder: "Search for address..."
        })
        .on('markgeocode', function (e) {
            const latlng = e.geocode.center;
            marker.setLatLng(latlng);
            map.setView(latlng, 16);
            reverseGeocode(latlng.lat.toFixed(6), latlng.lng.toFixed(6));
        })
        .addTo(map);

        // Ensure all inputs have IDs
        ["CountryName", "CityName", "Address", "ZipCode", "Latitude", "Longitude"].forEach(name => {
            const input = document.getElementsByName(name)[0];
            if (input) input.id = name;
        });
    </script>
}

